name: Generate executables and post them to release

on:
  release:
    types: [published]
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  test:
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test 
        shell: pwsh
        run: |
          $version = Get-Content .\Cargo.toml | Select-String -Pattern 'version' | ForEach-Object { $_ -replace '[" ]', '' } | ForEach-Object { $_.Split('=')[1] }
          echo "APP_VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "$version"
  # generate-freebsd-executables:
  #   name: Build & publish for ${{ matrix.name }}
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       rust:
  #         - stable
  #       target:
  #         - x86_64-unknown-freebsd
  #         - i686-unknown-freebsd
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
      
  #     - name: Install Rust
  #       run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}

  #     - name: Install cross-compilation tools
  #       uses: Asthowen/setup-cross-toolchain-action@main
  #       with:
  #         target: ${{ matrix.target }}
          
  #     - name: Use GitHub cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

  #     - name: Build release
  #       run: cargo build --release --locked

  #     - name: Get RTPM version
  #       id: rtpm_version
  #       run: echo "APP_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml)" >> $GITHUB_OUTPUT

  #     - name: Upload executable to releases
  #       uses: Asthowen/UploadReleaseAsset@main
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         release_tag: ${{ steps.rtpm_version.outputs.APP_VERSION }}
  #         asset_path: ./target/${{ matrix.target }}/release/rtpm
  #         asset_name: rtpm-${{ steps.rtpm_version.outputs.APP_VERSION }}-${{ matrix.target }}
  #         asset_content_type: application/octet-stream